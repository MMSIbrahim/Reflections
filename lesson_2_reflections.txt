Q:What happens when you initialize a repository? Why do you need to do it?
A:Really trivial question, when you initialize a repository git transforms a folder(a directory) into a repository usable by git however no commits are made, OFC YOU NEED IT TO GAIN GIT'S FREAKING BENEFITS OF VERSION CONTROL WHY THE STUPID QUESTION HUH?
//
//
Q:How is the staging area different from the working directory and the repository? What value do you think it offers?
A:FUCKING STAGED MAN, no but seriously ughh i guess it's some kind of locale that stores ur files before overwritting what is in the repository.
//
//
EDIT EDIT FOR LESSON2
//
//
Q:How can you use the staging area to make sure you have one commit per logical change?
A:by using git diff and git diff --Staged you can see changes per files and only update 1 file at a time.
//
//
Q:What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A:Multiple versions i guess different tweaks of the same app?
//
//
Q:How do the diagrams help you visualize the branch structure?
A:As an engineer i use diagrams to help others visualize what is in my head and what makes sense to me, diagrams can be applied on anything with that logic.
//
//
Q:What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A:WHY NOT BOTH?, because it is like human reproduction.
//
//
Q:What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A:pros: does the donkey work for you, Cons: as u explained mini conflicts.